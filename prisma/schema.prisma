// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  firstName       String?
  lastName        String?
  name            String?
  phoneNumber     String?
  email           String?        @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  hasNotification Boolean        @default(false)
  role            UserRole       @default(USER)
  accounts        Account[]
  commodity       Commodity[]
  notification    Notification[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String?
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Commodity {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String
  price       Price[]
  image       String?
  unit        String
  minQuantity Int
  maxQuantity Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Price {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  price       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  commodityId String    @db.ObjectId
  commodity   Commodity @relation(fields: [commodityId], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String?
  body      String
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
